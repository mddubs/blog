Custom Top-Level Domains

Top-level domains, TLDs, are the last part of domain names: .com, .org, .net, etc.  By running our own DNS server, BIND, we've created a custom TLD for each of our environments: .dev, .qa, .stg, and .prod.  This allows all employees to quickly and consistently navigate hundreds of projects among multiple environments, by simply appending the environment name in the URL.

Consistency is key.  We currently develop and maintain hundreds of custom websites but it might as well be tens of thousands - the process won't change.  The only upfront requirement is to know the primary domain name, let's say www.example.com.  We'll then name all resources related to that project `www_example_com`.  The Git repo, the database, the Jenkins jobs, the Redmine project, everything.  Then it only takes a glance for anyone to know instantly where to find this project, in any environment.

Granted, if the domain name changes we have a problem.  Fortunately it doesn't happen too often.  But it does happen, and although an AUTOMATED SCRIPT will handle the bulk of the work, we always send it to development for a final check pushing it up through the environments.


We develop and maintain hundreds of custom websites so consistency is key to our efficiency.  For any new project we insist on knowing the primary domain name of the intended website up front.  If the website is to be www.example.com, we'll name the repository, database, file folder, Jenkins job, Redmine project, etc `www_example_com`. 
